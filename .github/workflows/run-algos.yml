name: Reconstruct and evaluate
on:
  workflow_call:
    inputs:
      algo_list:
        required: true
        type: string
      runner:
        required: true
        type: string
jobs:
  recon_and_evaluate:
    if: ${{ inputs.algo_list != '[]' }}
    runs-on: ${{ fromJSON(inputs.runner) }}
    strategy:
      matrix:
        algo: ${{ fromJSON(inputs.algo_list) }}
    steps:
    - uses: actions/checkout@v3
    - name: Get modified algorithms
      id: getfile
      run: |
        
      shell: bash
    - name: Reconstruct and evaluate
      env:
        RDM_USER: ${{ secrets.RDM_USER }}
        RDM_KEY: ${{ secrets.RDM_KEY }}
        OS_PASSWORD: ${{ secrets.SWIFT_OS_PASSWORD }}
        OS_PROJECT_ID: ${{ secrets.SWIFT_OS_PROJECT_ID }}
        OS_USERNAME: ${{ secrets.SWIFT_OS_USERNAME }}
        OS_APPLICATION_CREDENTIAL_ID: ${{ secrets.SWIFT_OS_APPLICATION_CREDENTIAL_ID }}
        OS_APPLICATION_CREDENTIAL_SECRET: ${{ secrets.SWIFT_OS_APPLICATION_CREDENTIAL_SECRET }}
        PARSE_APPLICATION_ID: ${{ secrets.PARSE_APPLICATION_ID }}
        PARSE_REST_API_KEY: ${{ secrets.PARSE_REST_API_KEY }}
        PARSE_MASTER_KEY: ${{ secrets.PARSE_MASTER_KEY }}
      run: |
        sudo apt-get update
        sudo apt-get install python3.10 python3.10-venv python-is-python3 -y
        pip install qsm-forward==0.19 webdavclient3 argparse numpy nibabel scikit-learn scikit-image scipy
        export PATH=$PATH:/home/runnerx/.local/bin

        python get-maps.py
        tar xf data.tar
        rm data.tar
        qsm-forward head data/ bids

        bash algos/${{ matrix.algo }}.sh
        
        python metrics/metrics.py \
          "bids/derivatives/qsm-forward/sub-1/anat/sub-1_Chimap.nii" \
          recons/${{ matrix.algo }}/*.nii* \
          --roi "bids/derivatives/qsm-forward/sub-1/anat/sub-1_mask.nii"
        cat recons/${{ matrix.algo }}/*.md* >> $GITHUB_STEP_SUMMARY

        ./upload.sh

